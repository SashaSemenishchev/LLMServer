/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: protocol/server.proto */

#ifndef PROTOBUF_C_protocol_2fserver_2eproto__INCLUDED
#define PROTOBUF_C_protocol_2fserver_2eproto__INCLUDED

#include "protobuf-c/protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct AiServer__CompletionStatus AiServer__CompletionStatus;
typedef struct AiServer__CompletionChunk AiServer__CompletionChunk;
typedef struct AiServer__WholeCompletion AiServer__WholeCompletion;
typedef struct AiServer__AvailablePresetPromptsResponse AiServer__AvailablePresetPromptsResponse;
typedef struct AiServer__Error AiServer__Error;


/* --- enums --- */

typedef enum _AiServer__Status {
  AI_SERVER__STATUS__STARTED = 0,
  AI_SERVER__STATUS__ENDED = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(AI_SERVER__STATUS)
} AiServer__Status;

/* --- messages --- */

struct  AiServer__CompletionStatus
{
  ProtobufCMessage base;
  char *askid;
  char *completionid;
  AiServer__Status status;
  protobuf_c_boolean stream;
};
#define AI_SERVER__COMPLETION_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ai_server__completion_status__descriptor) \
, NULL, NULL, AI_SERVER__STATUS__STARTED, 0 }


struct  AiServer__CompletionChunk
{
  ProtobufCMessage base;
  char *completionid;
  char *content;
};
#define AI_SERVER__COMPLETION_CHUNK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ai_server__completion_chunk__descriptor) \
, NULL, NULL }


struct  AiServer__WholeCompletion
{
  ProtobufCMessage base;
  char *askid;
  char *completionid;
  char *content;
  int64_t timestamp;
};
#define AI_SERVER__WHOLE_COMPLETION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ai_server__whole_completion__descriptor) \
, NULL, NULL, NULL, 0 }


struct  AiServer__AvailablePresetPromptsResponse
{
  ProtobufCMessage base;
  char *askid;
  size_t n_names;
  char **names;
};
#define AI_SERVER__AVAILABLE_PRESET_PROMPTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ai_server__available_preset_prompts_response__descriptor) \
, NULL, 0,NULL }


struct  AiServer__Error
{
  ProtobufCMessage base;
  char *requestid;
  int32_t code;
  char *messagestring;
};
#define AI_SERVER__ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ai_server__error__descriptor) \
, NULL, 0, NULL }


/* AiServer__CompletionStatus methods */
void   ai_server__completion_status__init
                     (AiServer__CompletionStatus         *message);
size_t ai_server__completion_status__get_packed_size
                     (const AiServer__CompletionStatus   *message);
size_t ai_server__completion_status__pack
                     (const AiServer__CompletionStatus   *message,
                      uint8_t             *out);
size_t ai_server__completion_status__pack_to_buffer
                     (const AiServer__CompletionStatus   *message,
                      ProtobufCBuffer     *buffer);
AiServer__CompletionStatus *
       ai_server__completion_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ai_server__completion_status__free_unpacked
                     (AiServer__CompletionStatus *message,
                      ProtobufCAllocator *allocator);
/* AiServer__CompletionChunk methods */
void   ai_server__completion_chunk__init
                     (AiServer__CompletionChunk         *message);
size_t ai_server__completion_chunk__get_packed_size
                     (const AiServer__CompletionChunk   *message);
size_t ai_server__completion_chunk__pack
                     (const AiServer__CompletionChunk   *message,
                      uint8_t             *out);
size_t ai_server__completion_chunk__pack_to_buffer
                     (const AiServer__CompletionChunk   *message,
                      ProtobufCBuffer     *buffer);
AiServer__CompletionChunk *
       ai_server__completion_chunk__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ai_server__completion_chunk__free_unpacked
                     (AiServer__CompletionChunk *message,
                      ProtobufCAllocator *allocator);
/* AiServer__WholeCompletion methods */
void   ai_server__whole_completion__init
                     (AiServer__WholeCompletion         *message);
size_t ai_server__whole_completion__get_packed_size
                     (const AiServer__WholeCompletion   *message);
size_t ai_server__whole_completion__pack
                     (const AiServer__WholeCompletion   *message,
                      uint8_t             *out);
size_t ai_server__whole_completion__pack_to_buffer
                     (const AiServer__WholeCompletion   *message,
                      ProtobufCBuffer     *buffer);
AiServer__WholeCompletion *
       ai_server__whole_completion__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ai_server__whole_completion__free_unpacked
                     (AiServer__WholeCompletion *message,
                      ProtobufCAllocator *allocator);
/* AiServer__AvailablePresetPromptsResponse methods */
void   ai_server__available_preset_prompts_response__init
                     (AiServer__AvailablePresetPromptsResponse         *message);
size_t ai_server__available_preset_prompts_response__get_packed_size
                     (const AiServer__AvailablePresetPromptsResponse   *message);
size_t ai_server__available_preset_prompts_response__pack
                     (const AiServer__AvailablePresetPromptsResponse   *message,
                      uint8_t             *out);
size_t ai_server__available_preset_prompts_response__pack_to_buffer
                     (const AiServer__AvailablePresetPromptsResponse   *message,
                      ProtobufCBuffer     *buffer);
AiServer__AvailablePresetPromptsResponse *
       ai_server__available_preset_prompts_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ai_server__available_preset_prompts_response__free_unpacked
                     (AiServer__AvailablePresetPromptsResponse *message,
                      ProtobufCAllocator *allocator);
/* AiServer__Error methods */
void   ai_server__error__init
                     (AiServer__Error         *message);
size_t ai_server__error__get_packed_size
                     (const AiServer__Error   *message);
size_t ai_server__error__pack
                     (const AiServer__Error   *message,
                      uint8_t             *out);
size_t ai_server__error__pack_to_buffer
                     (const AiServer__Error   *message,
                      ProtobufCBuffer     *buffer);
AiServer__Error *
       ai_server__error__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ai_server__error__free_unpacked
                     (AiServer__Error *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*AiServer__CompletionStatus_Closure)
                 (const AiServer__CompletionStatus *message,
                  void *closure_data);
typedef void (*AiServer__CompletionChunk_Closure)
                 (const AiServer__CompletionChunk *message,
                  void *closure_data);
typedef void (*AiServer__WholeCompletion_Closure)
                 (const AiServer__WholeCompletion *message,
                  void *closure_data);
typedef void (*AiServer__AvailablePresetPromptsResponse_Closure)
                 (const AiServer__AvailablePresetPromptsResponse *message,
                  void *closure_data);
typedef void (*AiServer__Error_Closure)
                 (const AiServer__Error *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    ai_server__status__descriptor;
extern const ProtobufCMessageDescriptor ai_server__completion_status__descriptor;
extern const ProtobufCMessageDescriptor ai_server__completion_chunk__descriptor;
extern const ProtobufCMessageDescriptor ai_server__whole_completion__descriptor;
extern const ProtobufCMessageDescriptor ai_server__available_preset_prompts_response__descriptor;
extern const ProtobufCMessageDescriptor ai_server__error__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_protocol_2fserver_2eproto__INCLUDED */
